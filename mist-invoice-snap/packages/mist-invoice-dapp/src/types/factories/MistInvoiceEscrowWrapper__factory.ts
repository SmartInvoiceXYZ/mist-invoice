/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MistInvoiceEscrowWrapper,
  MistInvoiceEscrowWrapperInterface,
} from "../MistInvoiceEscrowWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_invoiceFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mistPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CLIENT_SIGNAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVOICE_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROVIDER_SIGNAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "providerHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "clientHash",
            type: "uint256",
          },
          {
            internalType: "bytes[]",
            name: "encData",
            type: "bytes[]",
          },
        ],
        internalType: "struct MistInvoiceEscrowWrapper.MistSecret",
        name: "_mistData",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_type",
        type: "bytes32",
      },
    ],
    name: "createInvoice",
    outputs: [
      {
        internalType: "address",
        name: "invoice",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mistPool",
    outputs: [
      {
        internalType: "contract IMISTPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_invoiceAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_details",
        type: "bytes32",
      },
      {
        internalType: "uint256[4]",
        name: "_digest",
        type: "uint256[4]",
      },
      {
        internalType: "enum MistInvoiceEscrowWrapper.ROLE",
        name: "_role",
        type: "uint8",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "A",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "B",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "C",
            type: "tuple",
          },
        ],
        internalType: "struct Verifier.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "privateDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_invoiceAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestone",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_digest",
        type: "uint256[4]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "A",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "B",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "C",
            type: "tuple",
          },
        ],
        internalType: "struct Verifier.Proof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "privateRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_invoiceAddr",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "_digest",
        type: "uint256[4]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "A",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "B",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "C",
            type: "tuple",
          },
        ],
        internalType: "struct Verifier.Proof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_encNote",
        type: "bytes",
      },
    ],
    name: "privateWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_invoiceAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_clientAward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_providerAward",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_details",
        type: "bytes32",
      },
      {
        internalType: "bytes[2]",
        name: "_encNotes",
        type: "bytes[2]",
      },
    ],
    name: "resolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "A",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "B",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "C",
            type: "tuple",
          },
        ],
        internalType: "struct Verifier.Proof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "digest",
        type: "uint256[4]",
      },
      {
        internalType: "uint256",
        name: "signal",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[6]",
        name: "input",
        type: "uint256[6]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620034843803806200348483398101604081905262000034916200007a565b6001600160a01b03918216608052600080546001600160a01b03191691909216179055620000b2565b80516001600160a01b03811681146200007557600080fd5b919050565b600080604083850312156200008e57600080fd5b62000099836200005d565b9150620000a9602084016200005d565b90509250929050565b6080516133af620000d56000396000818161010e015261040c01526133af6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636484caa4116100715780636484caa4146101435780637531bb0f14610156578063a99590c31461015e578063f398789b14610181578063f5afd77914610194578063fc0fcb4a146101a757600080fd5b80631fa59159146100ae5780632e4f5d85146100c35780633143f731146100f35780633154b0de146101095780634094f49814610130575b600080fd5b6100c16100bc3660046126c4565b6101ba565b005b6100d66100d1366004612775565b6103b4565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fb6104cc565b6040519081526020016100ea565b6100d67f000000000000000000000000000000000000000000000000000000000000000081565b6100c161013e36600461284a565b610507565b6100c16101513660046128c5565b610989565b6100fb610f4a565b61017161016c366004612938565b610f70565b60405190151581526020016100ea565b61017161018f366004612a62565b61108f565b6000546100d6906001600160a01b031681565b6100c16101b5366004612b40565b6111a1565b6001600160a01b0385166101e95760405162461bcd60e51b81526004016101e090612b92565b60405180910390fd5b60008260018111156101fd576101fd612bc2565b148061021a5750600182600181111561021857610218612bc2565b145b61025c5760405162461bcd60e51b81526020600482015260136024820152721d985b1a59081c9bdb19481c995c5d5a5c9959606a1b60448201526064016101e0565b600082600181111561027057610270612bc2565b036102dc576001600160a01b0385166000908152600160205260409020546102bb9082908561016c60008051602061335a83398151915260008051602061333a833981519152612bee565b6102d75760405162461bcd60e51b81526004016101e090612c02565b610350565b6001600160a01b0385166000908152600160205260409020546103349082908561016c60008051602061335a8339815191527f91c78f343fa4753a18a7ecaff5a0d85cfa864839d839601256f8f00300358578612bee565b6103505760405162461bcd60e51b81526004016101e090612c02565b6040516301670ba960e01b81526004810185905285906001600160a01b038216906301670ba990602401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b50505050505050505050565b6000863581036103fd5760405162461bcd60e51b81526020600482015260146024820152731b595c9adb19481c9bdbdd081c995c5d5a5c995960621b60448201526064016101e0565b60405163fc2b2c5b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063fc2b2c5b906104559030908b908b908b908b908b90600401612c29565b6020604051808303816000875af1158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190612ca9565b6001600160a01b038116600090815260016020526040902090925088906104bf8282612e8d565b5050509695505050505050565b61050460008051602061335a8339815191527f91c78f343fa4753a18a7ecaff5a0d85cfa864839d839601256f8f00300358578612bee565b81565b6001600160a01b03851661052d5760405162461bcd60e51b81526004016101e090612b92565b8061057a5760405162461bcd60e51b815260206004820152601760248201527f656e63727970746564206e6f746520726571756972656400000000000000000060448201526064016101e0565b6001600160a01b0385166000908152600160205260409020546105c09084908661016c60008051602061335a83398151915260008051602061333a833981519152612bee565b6105dc5760405162461bcd60e51b81526004016101e090612c02565b60008590506000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190612ca9565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190612fd6565b9050826001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03851691506370a0823190602401602060405180830381865afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107759190612fd6565b905060006107838383612fef565b60408051600180825281830190925291925060009190816020015b6107a66124fa565b81526020019060019003908161079e5790505090506040518060600160405280600160008e6001600160a01b03166001600160a01b0316815260200190815260200160002060020154815260200189898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506040805160808101909152602090930192918291508152602001886001600160a01b0316815260200160008152602001858152508152508160008151811061087557610875613002565b602090810291909101015260408051606081019182905260008054632d0335ab60e01b9093523060648301529181906001600160a01b0316632d0335ab60848301602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190612fd6565b815230602080830191909152604091820185905260008054835192830184529082529151638bf8579160e01b81529293506001600160a01b0390911691638bf857919161094991859190600401613068565b600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b50505050505050505050505050505050565b6001600160a01b0385166109af5760405162461bcd60e51b81526004016101e090612b92565b60006109bb8280612ccd565b90501180156109d8575060006109d46020830183612ccd565b9050115b610a245760405162461bcd60e51b815260206004820152601860248201527f656e63727970746564206e6f746573207265717569726564000000000000000060448201526064016101e0565b60008590506000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8f9190612ca9565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190612fd6565b60408051602481018a905260448101899052606480820189905282518083039091018152608490910182526020810180516001600160e01b03166353e83e4160e11b17905290519192506001600160a01b038a1691610b5c9190613166565b600060405180830381855af49150503d8060008114610b97576040519150601f19603f3d011682016040523d82523d6000602084013e610b9c565b606091505b50506040516370a0823160e01b8152306004820152600091506001600160a01b038416906370a0823190602401602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612fd6565b90506000610c188383612fef565b610c22898b613182565b610c2c908b613195565b610c369190612d29565b90506000610c448484612fef565b610c4e8a8c613182565b610c58908b613195565b610c629190612d29565b6040805160028082526060820190925291925060009190816020015b610c866124fa565b815260200190600190039081610c7e575050604080516060810182526001600160a01b038f166000908152600160209081529290206002015481529192508101610cd08a80612ccd565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506040805160808101909152602090930192918291508152602001896001600160a01b03168152602001600081526020018681525081525081600081518110610d4f57610d4f613002565b60200260200101819052506040518060600160405280600160008f6001600160a01b03166001600160a01b0316815260200190815260200160002060010154815260200189600160028110610da657610da6613002565b602002810190610db69190612ccd565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506040805160808101909152602090930192918291508152602001896001600160a01b03168152602001600081526020018581525081525081600181518110610e3557610e35613002565b602090810291909101015260408051606081019182905260008054632d0335ab60e01b9093523060648301529181906001600160a01b0316632d0335ab60848301602060405180830381865afa158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190612fd6565b815230602080830191909152604091820185905260008054835192830184529082529151638bf8579160e01b81529293506001600160a01b0390911691638bf8579191610f0991859190600401613068565b600060405180830381600087803b158015610f2357600080fd5b505af1158015610f37573d6000803e3d6000fd5b5050505050505050505050505050505050565b61050460008051602061335a83398151915260008051602061333a833981519152612bee565b60408051600680825260e082019092526000918291906020820160c0803683370190505090508481600081518110610faa57610faa613002565b6020908102919091010152805184359082906001908110610fcd57610fcd613002565b6020908102919091010152836001602002013581600281518110610ff357610ff3613002565b602090810291909101015283600260200201358160038151811061101957611019613002565b602090810291909101015283600360200201358160048151811061103f5761103f613002565b602002602001018181525050828160058151811061105f5761105f613002565b60209081029190910101526110828161107d368990038901896131d9565b6116ef565b159150505b949350505050565b600061109961254d565b604080518082018252875181526020808901518183015290835281516080810183528751518184019081528851830151606083015281528251808401845288830180515182525183015181840152818301528382015281518083018352865181528682015181830152838301528151600680825260e082019093526000929091820160c08036833701905050905060005b60068110156111795784816006811061114557611145613002565b602002015182828151811061115c5761115c613002565b6020908102919091010152806111718161327b565b91505061112a565b5061118481836116ef565b60000361119657600192505050611087565b600092505050611087565b6001600160a01b0384166111f75760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420696e766f696365207265717569726564000000000000000060448201526064016101e0565b6001600160a01b03841660009081526001602052604090205461123d9082908461016c60008051602061335a83398151915260008051602061333a833981519152612bee565b6112595760405162461bcd60e51b81526004016101e090612c02565b60008490506000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156112a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c49190612ca9565b90506000826001600160a01b031663dbac78066040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c9190612fd6565b6040516337bdc99b60e01b8152600481018890529091506001600160a01b038416906337bdc99b90602401600060405180830381600087803b15801561137157600080fd5b505af1158015611385573d6000803e3d6000fd5b50505050600081876113979190612fef565b6113a2906001613182565b90506000816001600160401b038111156113be576113be612982565b6040519080825280602002602001820160405280156113f757816020015b6113e46124fa565b8152602001906001900390816113dc5790505b50905060005b828110156115e757604080516060810182526001600160a01b038c1660008181526001602081815294822080820154855292909152835290918201906003016114468785613182565b8154811061145657611456613002565b90600052602060002001805461146b90612d40565b80601f016020809104026020016040519081016040528092919081815260200182805461149790612d40565b80156114e45780601f106114b9576101008083540402835291602001916114e4565b820191906000526020600020905b8154815290600101906020018083116114c757829003601f168201915b5050505050815260200160405180608001604052806000600281111561150c5761150c612bc2565b8152602001886001600160a01b0316815260200160008152602001896001600160a01b0316636beaeeae6040518163ffffffff1660e01b81526004016000604051808303816000875af1158015611567573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261158f9190810190613294565b6115998987613182565b815181106115a9576115a9613002565b60200260200101518152508152508282815181106115c9576115c9613002565b602002602001018190525080806115df9061327b565b9150506113fd565b5060408051606081019182905260008054632d0335ab60e01b9093523060648301529181906001600160a01b0316632d0335ab60848301602060405180830381865afa15801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190612fd6565b815230602080830191909152604091820185905260008054835192830184529082529151638bf8579160e01b81529293506001600160a01b0390911691638bf85791916116b191859190600401613068565b600060405180830381600087803b1580156116cb57600080fd5b505af11580156116df573d6000803e3d6000fd5b5050505050505050505050505050565b600060008051602061335a833981519152816117096118cf565b90508060800151518551600161171f9190613182565b146117615760405162461bcd60e51b81526020600482015260126024820152711d995c9a599a595c8b5898590b5a5b9c1d5d60721b60448201526064016101e0565b604080518082019091526000808252602082018190525b8651811015611852578387828151811061179457611794613002565b6020026020010151106117e95760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640060448201526064016101e0565b61183e8261183985608001518460016118029190613182565b8151811061181257611812613002565b60200260200101518a858151811061182c5761182c613002565b6020026020010151611e4a565b611ee0565b91508061184a8161327b565b915050611778565b5061187b81836080015160008151811061186e5761186e613002565b6020026020010151611ee0565b90506118b161188d8660000151611f79565b8660200151846000015185602001518587604001518b604001518960600151612018565b6118c157600193505050506118c9565b600093505050505b92915050565b6118d7612599565b6040805180820182527f09bc2b5fa991f25f07bd2f14656f07d98eaee8b697baaf3076665ac2dc855ce181527f06712259ba18609855870270437718d66017539a777759a7798512600d7259fd6020808301919091529083528151608080820184527f09a55f6ba13259e1e6b96c7bc5243d6f32d0ed44252bac364c1d9cdfb4dc4bb98285019081527f2646230ca985ed8450f2ad704a2dd049f14e4508ad25d78f94bc23a94a7207a6606080850191909152908352845180860186527f106cd764f294950d8f68e9861b3c949179f74f38d4e03019f567048bdcaed10e81527e5fe246c36bb5505f1ffed99596f9122087c53ce570141bdd01e139535089b8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186018181527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed838601819052908352865180880188527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b8082527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8289018190528589019290925289890194909452875194850188528488019283528486019190915290835285518087018752918252818501528184015290840152815160078082526101008201909352919082015b6040805180820190915260008082526020820152815260200190600190039081611adf57505060808201908152604080518082019091527f24c1262695f941ff5c04693834ac71f0ef9448d12eca586ac8b02968876bb3d081527f0d600171cfcee50a59bda93a91ef3a092e3abb37526510ee203795fee711de06602082015290518051600090611b7257611b72613002565b602002602001018190525060405180604001604052807f16a4d19f5a791014e62de326c57935f3bbd5336abbca96f843c893e9cdcd051281526020017f1b8b5d7fad7b67c1efa037651dc78a70f17d2665c14b47e1075fad404ad6672c8152508160800151600181518110611be957611be9613002565b602002602001018190525060405180604001604052807f246298612fb58f148a4ee4cfe9e61bec2430c52335bca56dc7495077b9fa9a3b81526020017f150e288cc5852119687daa5e89a9eff448e7c0198d935e8e0cd58bb7dc78b0488152508160800151600281518110611c6057611c60613002565b602002602001018190525060405180604001604052807f04d26d5c98acce25f6aec84ab4103789d60f2fc5d15f3be8c32738cbb7ca776c81526020017f11eb6e653666825f5c507e5c011d5a5a8fb9fbc7e659a539fbbf62f56afee2b08152508160800151600381518110611cd757611cd7613002565b602002602001018190525060405180604001604052807f18069306985d23b4d7a25891fead26aa1c441c5b2e010c2749a2c1cfe0f7f8b681526020017f044b7f724507a27a26eef585204e2eac65909ab8dac84d6650dd296641b706be8152508160800151600481518110611d4e57611d4e613002565b602002602001018190525060405180604001604052807f07fc26920ef91bd6ed4cb94d4eceecf3f29baf7e038c3a1faed6e1a3821b7c4e81526020017f2ae6bce1beb6dd435d1851bafa53d74c8dcaf30102eac42ad1d51e106f3bdc828152508160800151600581518110611dc557611dc5613002565b602002602001018190525060405180604001604052807f16d1c29f72313a5580cf171b33f05b4b6e8fedc1cbd51dfcbb7fb26faf93c06e81526020017f174b1e6d3646339d640098421fc186c18895ba879bfa4277a4b1dd9ea23072f68152508160800151600681518110611e3c57611e3c613002565b602002602001018190525090565b6040805180820190915260008082526020820152611e666125ea565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080611e9557fe5b5080611ed85760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b60448201526064016101e0565b505092915050565b6040805180820190915260008082526020820152611efc612608565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080611f3657fe5b5080611ed85760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b60448201526064016101e0565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790158015611fc057506020830151155b15611fe05750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516120059190612bee565b61200f9084612fef565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161203357505060408051600480825260a0820190925291925060009190602082015b61207d612626565b8152602001906001900390816120755790505090508a826000815181106120a6576120a6613002565b602002602001018190525088826001815181106120c5576120c5613002565b602002602001018190525086826002815181106120e4576120e4613002565b6020026020010181905250848260038151811061210357612103613002565b6020026020010181905250898160008151811061212257612122613002565b6020026020010181905250878160018151811061214157612141613002565b6020026020010181905250858160028151811061216057612160613002565b6020026020010181905250838160038151811061217f5761217f613002565b602002602001018190525061219482826121a3565b9b9a5050505050505050505050565b600081518351146121ef5760405162461bcd60e51b81526020600482015260166024820152751c185a5c9a5b99cb5b195b99dd1a1ccb59985a5b195960521b60448201526064016101e0565b825160006121fe826006612d29565b90506000816001600160401b0381111561221a5761221a612982565b604051908082528060200260200182016040528015612243578160200160208202803683370190505b50905060005b8381101561247e5786818151811061226357612263613002565b6020026020010151600001518282600661227d9190612d29565b612288906000613182565b8151811061229857612298613002565b6020026020010181815250508681815181106122b6576122b6613002565b602002602001015160200151828260066122d09190612d29565b6122db906001613182565b815181106122eb576122eb613002565b60200260200101818152505085818151811061230957612309613002565b6020908102919091010151515182612322836006612d29565b61232d906002613182565b8151811061233d5761233d613002565b60200260200101818152505085818151811061235b5761235b613002565b60209081029190910181015151015182612376836006612d29565b612381906003613182565b8151811061239157612391613002565b6020026020010181815250508581815181106123af576123af613002565b6020026020010151602001516000600281106123cd576123cd613002565b6020020151826123de836006612d29565b6123e9906004613182565b815181106123f9576123f9613002565b60200260200101818152505085818151811061241757612417613002565b60200260200101516020015160016002811061243557612435613002565b602002015182612446836006612d29565b612451906005613182565b8151811061246157612461613002565b6020908102919091010152806124768161327b565b915050612249565b50612487612646565b6000602082602086026020860160086107d05a03fa905080806124a657fe5b50806124ec5760405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b60448201526064016101e0565b505115159695505050505050565b604051806060016040528060008152602001606081526020016125486040805160808101909152806000815260200160006001600160a01b0316815260200160008152602001600081525090565b905290565b6040805160a081019091526000606082018181526080830191909152815260208101612577612626565b8152602001612548604051806040016040528060008152602001600081525090565b6040805160e08101909152600060a0820181815260c08301919091528152602081016125c3612626565b81526020016125d0612626565b81526020016125dd612626565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280612639612664565b8152602001612548612664565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461269757600080fd5b50565b80608081018310156118c957600080fd5b600061010082840312156126be57600080fd5b50919050565b60008060008060006101e086880312156126dd57600080fd5b85356126e881612682565b9450602086013593506126fe876040880161269a565b925060c08601356002811061271257600080fd5b91506127218760e088016126ab565b90509295509295909350565b60008083601f84011261273f57600080fd5b5081356001600160401b0381111561275657600080fd5b60208301915083602082850101111561276e57600080fd5b9250929050565b6000806000806000806080878903121561278e57600080fd5b86356001600160401b03808211156127a557600080fd5b908801906080828b0312156127b957600080fd5b909650602088013590808211156127cf57600080fd5b818901915089601f8301126127e357600080fd5b8135818111156127f257600080fd5b8a60208260051b850101111561280757600080fd5b60208301975080965050604089013591508082111561282557600080fd5b5061283289828a0161272d565b979a9699509497949695606090950135949350505050565b60008060008060006101c0868803121561286357600080fd5b853561286e81612682565b945061287d876020880161269a565b935061288c8760a088016126ab565b92506101a08601356001600160401b038111156128a857600080fd5b6128b48882890161272d565b969995985093965092949392505050565b600080600080600060a086880312156128dd57600080fd5b85356128e881612682565b945060208601359350604086013592506060860135915060808601356001600160401b0381111561291857600080fd5b86016040810188101561292a57600080fd5b809150509295509295909350565b6000806000806101c0858703121561294f57600080fd5b61295986866126ab565b9350610100850135925061297186610120870161269a565b939692955092936101a00135925050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156129ba576129ba612982565b60405290565b60405160c081016001600160401b03811182821017156129ba576129ba612982565b604051601f8201601f191681016001600160401b0381118282101715612a0a57612a0a612982565b604052919050565b600082601f830112612a2357600080fd5b612a2b612998565b806040840185811115612a3d57600080fd5b845b81811015612a57578035845260209384019301612a3f565b509095945050505050565b6000806000806101c0808688031215612a7a57600080fd5b612a848787612a12565b9450604087605f880112612a9757600080fd5b612a9f612998565b8060c089018a811115612ab157600080fd5b838a015b81811015612ad657612ac78c82612a12565b84526020909301928401612ab5565b50819750612ae48b82612a12565b9650505050508661011f870112612afa57600080fd5b612b026129c0565b908601908088831115612b1457600080fd5b61010088015b83811015612b32578035835260209283019201612b1a565b509598949750929550505050565b6000806000806101c08587031215612b5757600080fd5b8435612b6281612682565b935060208501359250612b78866040870161269a565b9150612b878660c087016126ab565b905092959194509250565b6020808252601690820152751d985b1a59081a5b9d9bda58d9481c995c5d5a5c995960521b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082612bfd57612bfd612bd8565b500690565b6020808252600d908201526c34b73b30b634b210383937b7b360991b604082015260600190565b6001600160a01b0387168152608060208201819052810185905260006001600160fb1b03861115612c5957600080fd5b8560051b808860a0850137820182810360a090810160408501528101859052848660c0830137600060c0868301015260c0601f19601f870116820101915050826060830152979650505050505050565b600060208284031215612cbb57600080fd5b8151612cc681612682565b9392505050565b6000808335601e19843603018112612ce457600080fd5b8301803591506001600160401b03821115612cfe57600080fd5b60200191503681900382131561276e57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176118c9576118c9612d13565b600181811c90821680612d5457607f821691505b6020821081036126be57634e487b7160e01b600052602260045260246000fd5b5b81811015612d895760008155600101612d75565b5050565b601f821115612dc957806000526020600020601f840160051c81016020851015612db45750805b612dc6601f850160051c830182612d74565b50505b505050565b6001600160401b03831115612de557612de5612982565b612df983612df38354612d40565b83612d8d565b6000601f841160018114612e2d5760008515612e155750838201355b600019600387901b1c1916600186901b178355612dc6565b600083815260209020601f19861690835b82811015612e5e5786850135825560209485019460019092019101612e3e565b5086821015612e7b5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8135815560016020808401358284015560408401356002840155600383016060850135601e19863603018112612ec257600080fd5b850180356001600160401b03811115612eda57600080fd5b90830190600581811b3603831315612ef157600080fd5b68010000000000000000821115612f0a57612f0a612982565b835482855580831015612f8e5760008581528681208481019083015b80821015612f8a57612f388254612d40565b8015612f8057601f80821160018114612f5357858555612f7d565b600085815260209020612f6e8385018a1c82018f8301612d74565b50600085815260208120818755555b50505b5090890190612f26565b5050505b50506000928352602083209282905b82811015612fcb57612faf8285612ccd565b612fba818389612dce565b505093860193908501908601612f9d565b505050505050505050565b600060208284031215612fe857600080fd5b5051919050565b818103818111156118c9576118c9612d13565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561303357818101518382015260200161301b565b50506000910152565b60008151808452613054816020860160208601613018565b601f01601f19169290920160200192915050565b6000604080835260a08301855182850152602080870151606060018060a01b0380831682890152858a01519250608082818a015285845180885260c09750878b019150878160051b8c010187870196506000805b838110156131415760bf198e84030185528851805184528a8101518c8c8601526130e88d86018261303c565b90508d820151915081516003811061310e57634e487b7160e01b85526021600452602485fd5b858f0152818c015189168a860152818e0151888601529089015160a09094019390935297890197938901936001016130bc565b50508b8103888d0152613154818e61303c565b9e9d5050505050505050505050505050565b60008251613178818460208701613018565b9190910192915050565b808201808211156118c9576118c9612d13565b6000826131a4576131a4612bd8565b500490565b6000604082840312156131bb57600080fd5b6131c3612998565b9050813581526020820135602082015292915050565b60008183036101008112156131ed57600080fd5b604051606081018181106001600160401b038211171561320f5761320f612982565b60405261321c85856131a9565b81526080603f198301121561323057600080fd5b613238612998565b91506132478560408601612a12565b82526132568560808601612a12565b602083015281602082015261326e8560c086016131a9565b6040820152949350505050565b60006001820161328d5761328d612d13565b5060010190565b600060208083850312156132a757600080fd5b82516001600160401b03808211156132be57600080fd5b818501915085601f8301126132d257600080fd5b8151818111156132e4576132e4612982565b8060051b91506132f58483016129e2565b818152918301840191848101908884111561330f57600080fd5b938501935b8385101561332d57845182529385019390850190613314565b9897505050505050505056fe971ee2c8925badb60ae2abac1a4faf0aa9b739dd57ac1b3b7a1e150be855cde330644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212201440da2fbaa6239683cdc709c76a644a799d4ce462dc5b6f13238af59e7ff9d764736f6c63430008130033";

type MistInvoiceEscrowWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MistInvoiceEscrowWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MistInvoiceEscrowWrapper__factory extends ContractFactory {
  constructor(...args: MistInvoiceEscrowWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _invoiceFactory: AddressLike,
    _mistPool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _invoiceFactory,
      _mistPool,
      overrides || {}
    );
  }
  override deploy(
    _invoiceFactory: AddressLike,
    _mistPool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_invoiceFactory, _mistPool, overrides || {}) as Promise<
      MistInvoiceEscrowWrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MistInvoiceEscrowWrapper__factory {
    return super.connect(runner) as MistInvoiceEscrowWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MistInvoiceEscrowWrapperInterface {
    return new Interface(_abi) as MistInvoiceEscrowWrapperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MistInvoiceEscrowWrapper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MistInvoiceEscrowWrapper;
  }
}
