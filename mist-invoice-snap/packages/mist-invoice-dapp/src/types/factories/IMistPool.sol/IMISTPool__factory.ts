/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMISTPool,
  IMISTPoolInterface,
} from "../../IMistPool.sol/IMISTPool";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "receiverHash",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "encryptedNote",
                type: "bytes",
              },
              {
                components: [
                  {
                    internalType: "enum TokenStandard",
                    name: "standard",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "tokenData",
                type: "tuple",
              },
            ],
            internalType: "struct PreCommitment[]",
            name: "preCommitments",
            type: "tuple[]",
          },
        ],
        internalType: "struct DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNullifyingKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "inputs",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treeIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "enum TransferType",
            name: "transferType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum TokenStandard",
                name: "standard",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "tokenData",
            type: "tuple",
          },
        ],
        internalType: "struct ExtData",
        name: "extData",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "registry",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "nullifiers",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyBalanceOf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "inputs",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treeIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "enum TransferType",
            name: "transferType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum TokenStandard",
                name: "standard",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "tokenData",
            type: "tuple",
          },
        ],
        internalType: "struct ExtData",
        name: "extData",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMISTPool__factory {
  static readonly abi = _abi;
  static createInterface(): IMISTPoolInterface {
    return new Interface(_abi) as IMISTPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IMISTPool {
    return new Contract(address, _abi, runner) as unknown as IMISTPool;
  }
}
