/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InvoiceCreationScript,
  InvoiceCreationScriptInterface,
} from "../../createMistInvoice.s.sol/InvoiceCreationScript";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLineaDummyData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSepoliaDummyData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260048054600160ff199182168117909255600c8054909116909117905534801561002d57600080fd5b50610d868061003d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634398af2d1461005157806398bb23081461006f578063c040622614610077578063f8ccbf4714610081575b600080fd5b61005961009e565b6040516100669190610a7d565b60405180910390f35b6100596101a5565b61007f61028f565b005b600c5461008e9060ff1681565b6040519015158152602001610066565b6060731111111111111111111111111111111111111111600173222222222222222222222222222222222222222273333333333333333333333333333333333333333360006100f04262278d00610a97565b90506000604051602001610122907744657461696c7320666f72206d69737420696e766f69636560401b815260180190565b60408051601f198184030181529082905280516020918201209250732c1b868d6596a18e32e61b901e4060c872647b6c9160019173a9c2372fdfa2ef145a0d13784c74de96f0e3eaff91610188918b918b918b918b918b918b918b918b918b9101610abe565b604051602081830303815290604052995050505050505050505090565b6060731111111111111111111111111111111111111111600173222222222222222222222222222222222222222273333333333333333333333333333333333333333360006101f74262278d00610a97565b90506000604051602001610229907744657461696c7320666f72206d69737420696e766f69636560401b815260180190565b60408051601f19818403018152908290528051602091820120925073b16f35c0ae2912430dac15764477e179d9b9ebea9160019173ae57f3689a23792649c597dd3b652b788f0414e491610188918b918b918b918b918b918b918b918b918b9101610abe565b60405163c1978d1f60e01b815260206004820152600b60248201526a505249564154455f4b455960a81b6044820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f90606401602060405180830381865afa1580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103219190610b11565b60405163350d56bf60e01b815260206004820152600a6024820152695055424c49435f4b455960b01b6044820152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063350d56bf90606401602060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b59190610b2a565b60405163f877cb1960e01b81526020600482015260076024820152664e4554574f524b60c81b6044820152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f877cb1990606401600060405180830381865afa158015610422573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261044a9190810190610b69565b6040805180820190915260078152667365706f6c696160c81b6020918201528151908201209091506060906000907f1e0a720f4ae0cb0b7ca5456760f55d0d199de7354acdf84502c240c8d8f42c6601610552576104a66101a5565b60405163350d56bf60e01b815260206004820152601b60248201527f4d4953545f494e564f4943455f455343524f575f5752415050455200000000006044820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063350d56bf906064015b602060405180830381865afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610b2a565b9050610668565b6040805180820190915260058152646c696e656160d81b6020918201528351908401207fd1c2299591365c99174d6c0c5a6fb980fbc5892fb6a9d8ade89124b75cf9d2ef0161061c576105a361009e565b60405163350d56bf60e01b815260206004820152602860248201527f4c494e45415f474f45524c495f4d4953545f494e564f4943455f455343524f576044820152672faba920a82822a960c11b6064820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063350d56bf9060840161050a565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e6574776f726b2073656c656374696f6e00000000000000604482015260640160405180910390fd5b60405163ce817d4760e01b815260048101869052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b50506040805160018082528183019092528493506000925090816020015b60608152602001906001900390816106e7579050506040516b64756d6d79456e634461746160a01b6020820152909150602c016040516020818303038152906040528160008151811061073c5761073c610c16565b602002602001018190525060006040518060800160405280604051602001610779906e191d5b5b5e53595c9adb19549bdbdd608a1b8152600f0190565b60408051808303601f190181529181528151602092830120835280517264756d6d7950726f766964657252616e646f6d60681b8184015281516013818303018152603390910182528051908301208383015280517064756d6d79436c69656e7452616e646f6d60781b81840152815160118183030181526031909101825280519083012083820152606090920185905281516001808252818401909352929350600092919082810190803683370190505090506103e88160008151811061084257610842610c16565b6020908102919091018101919091526040805160808101825284518152848301519281019290925283810151828201526060808501519083015251632e4f5d8560e01b815265657363726f7760d01b91906000906001600160a01b03881690632e4f5d85906108bb90859088908e908990600401610c67565b6020604051808303816000875af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610b2a565b905061093f6040518060400160405280601881526020017f4d69737420496e766f69636520416464726573733a2025730000000000000000815250826109c3565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b50505050505050505050505050505050565b610a0882826040516024016109d9929190610d26565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610a0c565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60005b83811015610a48578181015183820152602001610a30565b50506000910152565b60008151808452610a69816020860160208601610a2d565b601f01601f19169290920160200192915050565b602081526000610a906020830184610a51565b9392505050565b80820180821115610ab857634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03998a16815260ff98909816602089015295881660408801529387166060870152608086019290925260a0850152841660c0840152151560e08301529091166101008201526101200190565b600060208284031215610b2357600080fd5b5051919050565b600060208284031215610b3c57600080fd5b81516001600160a01b0381168114610a9057600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b7b57600080fd5b815167ffffffffffffffff80821115610b9357600080fd5b818401915084601f830112610ba757600080fd5b815181811115610bb957610bb9610b53565b604051601f8201601f19908116603f01168101908382118183101715610be157610be1610b53565b81604052828152876020848701011115610bfa57600080fd5b610c0b836020830160208801610a2d565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610c5c57815187529582019590820190600101610c40565b509495945050505050565b60808152600061010082018651608084015260208088015160a0850152604088015160c08501526060880151608060e086015282815180855261012094508487019150848160051b8801019450838301925060005b81811015610ceb5761011f19888703018352610cd9868551610a51565b95509284019291840191600101610cbc565b5050505083820390840152610d008187610c2c565b90508281036040840152610d148186610a51565b91505082606083015295945050505050565b604081526000610d396040830185610a51565b905060018060a01b0383166020830152939250505056fea2646970667358221220a3f05186e41ef53e4f2dcab2e66e58e0fc7247d9e6fe661adb25420f555a6d8b64736f6c63430008130033";

type InvoiceCreationScriptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceCreationScriptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceCreationScript__factory extends ContractFactory {
  constructor(...args: InvoiceCreationScriptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InvoiceCreationScript & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InvoiceCreationScript__factory {
    return super.connect(runner) as InvoiceCreationScript__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceCreationScriptInterface {
    return new Interface(_abi) as InvoiceCreationScriptInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InvoiceCreationScript {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InvoiceCreationScript;
  }
}
