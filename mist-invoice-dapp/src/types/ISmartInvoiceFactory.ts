/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface ISmartInvoiceFactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "create"
      | "create(address,uint256[],bytes,bytes32)"
      | "createDeterministic"
      | "createDeterministic(address,uint256[],bytes,bytes32,bytes32)"
      | "predictDeterministicAddress"
      | "predictDeterministicAddress(bytes32,bytes32)"
      | "resolutionRateOf"
      | "resolutionRateOf(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "create",
    values: [AddressLike, BigNumberish[], BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "create(address,uint256[],bytes,bytes32)",
    values: [AddressLike, BigNumberish[], BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createDeterministic",
    values: [AddressLike, BigNumberish[], BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createDeterministic(address,uint256[],bytes,bytes32,bytes32)",
    values: [AddressLike, BigNumberish[], BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "predictDeterministicAddress",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "predictDeterministicAddress(bytes32,bytes32)",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "resolutionRateOf",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "resolutionRateOf(address)",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(functionFragment: "create", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "create(address,uint256[],bytes,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDeterministic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDeterministic(address,uint256[],bytes,bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "predictDeterministicAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "predictDeterministicAddress(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resolutionRateOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resolutionRateOf(address)",
    data: BytesLike
  ): Result;
}

export interface ISmartInvoiceFactory extends BaseContract {
  connect(runner?: ContractRunner | null): ISmartInvoiceFactory;
  waitForDeployment(): Promise<this>;

  interface: ISmartInvoiceFactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  create: TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  "create(address,uint256[],bytes,bytes32)": TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  createDeterministic: TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike,
      _salt: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  "createDeterministic(address,uint256[],bytes,bytes32,bytes32)": TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike,
      _salt: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  predictDeterministicAddress: TypedContractMethod<
    [_type: BytesLike, _salt: BytesLike],
    [string],
    "nonpayable"
  >;

  "predictDeterministicAddress(bytes32,bytes32)": TypedContractMethod<
    [_type: BytesLike, _salt: BytesLike],
    [string],
    "nonpayable"
  >;

  resolutionRateOf: TypedContractMethod<
    [_resolver: AddressLike],
    [bigint],
    "view"
  >;

  "resolutionRateOf(address)": TypedContractMethod<
    [_resolver: AddressLike],
    [bigint],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "create"
  ): TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "create(address,uint256[],bytes,bytes32)"
  ): TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createDeterministic"
  ): TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike,
      _salt: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createDeterministic(address,uint256[],bytes,bytes32,bytes32)"
  ): TypedContractMethod<
    [
      _recipient: AddressLike,
      _amounts: BigNumberish[],
      _data: BytesLike,
      _type: BytesLike,
      _salt: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "predictDeterministicAddress"
  ): TypedContractMethod<
    [_type: BytesLike, _salt: BytesLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "predictDeterministicAddress(bytes32,bytes32)"
  ): TypedContractMethod<
    [_type: BytesLike, _salt: BytesLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "resolutionRateOf"
  ): TypedContractMethod<[_resolver: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "resolutionRateOf(address)"
  ): TypedContractMethod<[_resolver: AddressLike], [bigint], "view">;

  filters: {};
}
